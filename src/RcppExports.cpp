// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Cpporder
NumericVector Cpporder(NumericVector y, NumericVector x);
RcppExport SEXP _Rgof_Cpporder(SEXP ySEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpporder(y, x));
    return rcpp_result_gen;
END_RCPP
}
// TS_cont
Rcpp::NumericVector TS_cont(Rcpp::NumericVector x, Rcpp::Function pnull, Rcpp::NumericVector param, Rcpp::Function qnull);
RcppExport SEXP _Rgof_TS_cont(SEXP xSEXP, SEXP pnullSEXP, SEXP paramSEXP, SEXP qnullSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type pnull(pnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type qnull(qnullSEXP);
    rcpp_result_gen = Rcpp::wrap(TS_cont(x, pnull, param, qnull));
    return rcpp_result_gen;
END_RCPP
}
// TS_disc
Rcpp::NumericVector TS_disc(Rcpp::IntegerVector x, Rcpp::Function pnull, Rcpp::NumericVector param, Rcpp::NumericVector vals);
RcppExport SEXP _Rgof_TS_disc(SEXP xSEXP, SEXP pnullSEXP, SEXP paramSEXP, SEXP valsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type pnull(pnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vals(valsSEXP);
    rcpp_result_gen = Rcpp::wrap(TS_disc(x, pnull, param, vals));
    return rcpp_result_gen;
END_RCPP
}
// TSw_cont
Rcpp::NumericVector TSw_cont(Rcpp::NumericVector x, Rcpp::Function pnull, Rcpp::NumericVector param, Rcpp::NumericVector w);
RcppExport SEXP _Rgof_TSw_cont(SEXP xSEXP, SEXP pnullSEXP, SEXP paramSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type pnull(pnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(TSw_cont(x, pnull, param, w));
    return rcpp_result_gen;
END_RCPP
}
// TSw_disc
Rcpp::NumericVector TSw_disc(Rcpp::IntegerVector x, Rcpp::Function pnull, Rcpp::NumericVector param, Rcpp::NumericVector vals, Rcpp::NumericVector w);
RcppExport SEXP _Rgof_TSw_disc(SEXP xSEXP, SEXP pnullSEXP, SEXP paramSEXP, SEXP valsSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type pnull(pnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(TSw_disc(x, pnull, param, vals, w));
    return rcpp_result_gen;
END_RCPP
}
// bincounter
Rcpp::IntegerVector bincounter(Rcpp::NumericVector x, Rcpp::NumericVector bins);
RcppExport SEXP _Rgof_bincounter(SEXP xSEXP, SEXP binsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type bins(binsSEXP);
    rcpp_result_gen = Rcpp::wrap(bincounter(x, bins));
    return rcpp_result_gen;
END_RCPP
}
// calcTS
NumericVector calcTS(Rcpp::List dta, Rcpp::Function TS, int typeTS, Rcpp::List TSextra);
RcppExport SEXP _Rgof_calcTS(SEXP dtaSEXP, SEXP TSSEXP, SEXP typeTSSEXP, SEXP TSextraSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type TS(TSSEXP);
    Rcpp::traits::input_parameter< int >::type typeTS(typeTSSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type TSextra(TSextraSEXP);
    rcpp_result_gen = Rcpp::wrap(calcTS(dta, TS, typeTS, TSextra));
    return rcpp_result_gen;
END_RCPP
}
// gof_adj_C1
Rcpp::NumericMatrix gof_adj_C1(List dta, Rcpp::Function rnull, Rcpp::NumericVector vals, Rcpp::Function TS, int typeTS, Rcpp::List TSextra, const int B);
RcppExport SEXP _Rgof_gof_adj_C1(SEXP dtaSEXP, SEXP rnullSEXP, SEXP valsSEXP, SEXP TSSEXP, SEXP typeTSSEXP, SEXP TSextraSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type rnull(rnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type TS(TSSEXP);
    Rcpp::traits::input_parameter< int >::type typeTS(typeTSSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type TSextra(TSextraSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(gof_adj_C1(dta, rnull, vals, TS, typeTS, TSextra, B));
    return rcpp_result_gen;
END_RCPP
}
// gof_adj_C2
Rcpp::NumericMatrix gof_adj_C2(List dta, Rcpp::Function rnull, Rcpp::NumericVector vals, Rcpp::Function TS, int typeTS, Rcpp::List TSextra, Rcpp::NumericMatrix A, const int B);
RcppExport SEXP _Rgof_gof_adj_C2(SEXP dtaSEXP, SEXP rnullSEXP, SEXP valsSEXP, SEXP TSSEXP, SEXP typeTSSEXP, SEXP TSextraSEXP, SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type rnull(rnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type TS(TSSEXP);
    Rcpp::traits::input_parameter< int >::type typeTS(typeTSSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type TSextra(TSextraSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(gof_adj_C2(dta, rnull, vals, TS, typeTS, TSextra, A, B));
    return rcpp_result_gen;
END_RCPP
}
// gof_power_C
Rcpp::List gof_power_C(Rcpp::Function rnull, Rcpp::NumericVector vals, Rcpp::Function ralt, Rcpp::NumericVector param_alt, Rcpp::Function TS, int typeTS, Rcpp::List TSextra, const int B);
RcppExport SEXP _Rgof_gof_power_C(SEXP rnullSEXP, SEXP valsSEXP, SEXP raltSEXP, SEXP param_altSEXP, SEXP TSSEXP, SEXP typeTSSEXP, SEXP TSextraSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type rnull(rnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type ralt(raltSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type param_alt(param_altSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type TS(TSSEXP);
    Rcpp::traits::input_parameter< int >::type typeTS(typeTSSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type TSextra(TSextraSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(gof_power_C(rnull, vals, ralt, param_alt, TS, typeTS, TSextra, B));
    return rcpp_result_gen;
END_RCPP
}
// gof_test_C
Rcpp::NumericMatrix gof_test_C(Rcpp::List dta, Rcpp::Function rnull, Rcpp::Function TS, int typeTS, Rcpp::List TSextra, int B);
RcppExport SEXP _Rgof_gof_test_C(SEXP dtaSEXP, SEXP rnullSEXP, SEXP TSSEXP, SEXP typeTSSEXP, SEXP TSextraSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type rnull(rnullSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type TS(TSSEXP);
    Rcpp::traits::input_parameter< int >::type typeTS(typeTSSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type TSextra(TSextraSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(gof_test_C(dta, rnull, TS, typeTS, TSextra, B));
    return rcpp_result_gen;
END_RCPP
}
// newTSdisc
NumericVector newTSdisc(IntegerVector x, Function pnull, NumericVector param, NumericVector vals);
RcppExport SEXP _Rgof_newTSdisc(SEXP xSEXP, SEXP pnullSEXP, SEXP paramSEXP, SEXP valsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type pnull(pnullSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    rcpp_result_gen = Rcpp::wrap(newTSdisc(x, pnull, param, vals));
    return rcpp_result_gen;
END_RCPP
}
// wbincounter
Rcpp::NumericVector wbincounter(Rcpp::NumericVector x, Rcpp::NumericVector bins, Rcpp::NumericVector w);
RcppExport SEXP _Rgof_wbincounter(SEXP xSEXP, SEXP binsSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type bins(binsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(wbincounter(x, bins, w));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rgof_Cpporder", (DL_FUNC) &_Rgof_Cpporder, 2},
    {"_Rgof_TS_cont", (DL_FUNC) &_Rgof_TS_cont, 4},
    {"_Rgof_TS_disc", (DL_FUNC) &_Rgof_TS_disc, 4},
    {"_Rgof_TSw_cont", (DL_FUNC) &_Rgof_TSw_cont, 4},
    {"_Rgof_TSw_disc", (DL_FUNC) &_Rgof_TSw_disc, 5},
    {"_Rgof_bincounter", (DL_FUNC) &_Rgof_bincounter, 2},
    {"_Rgof_calcTS", (DL_FUNC) &_Rgof_calcTS, 4},
    {"_Rgof_gof_adj_C1", (DL_FUNC) &_Rgof_gof_adj_C1, 7},
    {"_Rgof_gof_adj_C2", (DL_FUNC) &_Rgof_gof_adj_C2, 8},
    {"_Rgof_gof_power_C", (DL_FUNC) &_Rgof_gof_power_C, 8},
    {"_Rgof_gof_test_C", (DL_FUNC) &_Rgof_gof_test_C, 6},
    {"_Rgof_newTSdisc", (DL_FUNC) &_Rgof_newTSdisc, 4},
    {"_Rgof_wbincounter", (DL_FUNC) &_Rgof_wbincounter, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rgof(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
